cmake_minimum_required(VERSION 2.8)
project( tracker )
SET (CMAKE_CXX_COMPILER             "/usr/bin/g++")
SET (CMAKE_CXX_FLAGS                "-Wall -g -O3 -std=c++11 -fopenmp")
SET (CMAKE_CXX_FLAGS_DEBUG          "-g")
SET (CMAKE_CXX_FLAGS_MINSIZEREL     "-Os -DNDEBUG")
SET (CMAKE_CXX_FLAGS_RELEASE        "-O4 -DNDEBUG")
SET (CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O3 -g")
find_package( OpenCV REQUIRED)
find_path(FFTW_INCLUDE_DIR fftw3.h  ${FFTW_INCLUDE_DIRS})
find_library(FFTW_LIBRARY fftw3 ${FFTW_LIBRARY_DIRS})

include_directories( ${OpenCV_INCLUDE_DIRS} )
include_directories( "likelihood/" )
include_directories( "models/" )
include_directories( "features/" )
include_directories( "utils/" )
include_directories( "libs/LBP/" )
include_directories( "libs/cppoptlib/" )
include_directories( "/usr/include/eigen3/" )

add_executable( tracker test_particle_filter.cpp models/particle_filter.cpp  utils/utils.cpp likelihood/gaussian.cpp utils/image_generator.cpp features/haar.cpp likelihood/logistic_regression.cpp likelihood/gaussian_naivebayes.cpp likelihood/multivariate_gaussian.cpp features/local_binary_pattern.cpp likelihood/multinomial.cpp likelihood/multinomialnaivebayes.cpp features/hog.cpp features/mb_lbp.cpp libs/LBP/LBP.cpp) 
target_link_libraries( tracker ${OpenCV_LIBS} ${FFTW_LIBRARY})

#add_executable( pmmh test_pmmh.cpp pmmh.cpp particle_filter.cpp  utils.cpp gaussian.cpp  image_generator.cpp haar.cpp gaussian_naivebayes.cpp logistic_regression.cpp multivariate_gaussian.cpp)
#target_link_libraries( pmmh ${OpenCV_LIBS}  )

add_executable( smc_squared test_smcsquared.cpp  models/smc_squared.cpp models/pmmh.cpp models/particle_filter.cpp  utils/utils.cpp likelihood/gaussian.cpp utils/image_generator.cpp features/haar.cpp likelihood/logistic_regression.cpp likelihood/gaussian_naivebayes.cpp likelihood/multivariate_gaussian.cpp features/local_binary_pattern.cpp likelihood/multinomial.cpp likelihood/multinomialnaivebayes.cpp features/hog.cpp features/mb_lbp.cpp libs/LBP/LBP.cpp) 
target_link_libraries( smc_squared ${OpenCV_LIBS}  ${FFTW_LIBRARY} )

